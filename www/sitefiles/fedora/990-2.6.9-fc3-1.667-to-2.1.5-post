--- orig-2.6.9/include/linux/sched.h	2004-11-12 04:19:24.000000000 +0800
+++ orig-2.6.9/include/linux/sched.h	2004-11-12 04:17:05.000000000 +0800
@@ -637,7 +637,8 @@
 #define PF_SWAPOFF	0x00080000	/* I am in swapoff */
 #define PF_LESS_THROTTLE 0x00100000	/* Throttle me less: I clean memory */
 #define PF_SYNCWRITE	0x00200000	/* I am doing a sync write */
-#define PF_SYNCTHREAD	0x00400000	/* this thread can start activity during the 
+#define PF_RELOCEXEC	0x00400000	/* relocate shared libraries */
+#define PF_SYNCTHREAD	0x00800000	/* this thread can start activity during the 
 					   early part of freezing processes */
 
 #ifdef CONFIG_SMP
--- orig-2.6.9/arch/i386/power/suspend2.c	2004-11-12 04:23:30.000000000 +0800
+++ new-2.6.9/arch/i386/power/suspend2.c	2004-11-12 04:23:15.000000000 +0800
@@ -143,10 +143,10 @@
 static void fix_processor_context(void)
 {
 	int nr = smp_processor_id();
-	struct tss_struct * t = &per_cpu(init_tss,nr);
+	struct tss_struct * t = init_tss + nr;
 
 	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
-        per_cpu(cpu_gdt_table,nr)[GDT_ENTRY_TSS].b &= 0xfffffdff;
+        cpu_gdt_table[nr][GDT_ENTRY_TSS].b &= 0xfffffdff;
 
 	load_TR_desc();
 
--- new-2.6.9/kernel/sched.c.org	2004-11-13 09:30:43.000000000 +0800
+++ new-2.6.9/kernel/sched.c	2004-11-13 09:30:54.000000000 +0800
@@ -3799,8 +3799,6 @@
 
 	read_unlock(&tasklist_lock);
 }
-EXPORT_SYMBOL(show_state);
-
 EXPORT_SYMBOL_GPL(show_state);
 
 void __devinit init_idle(task_t *idle, int cpu)
--- new-2.6.9/fs/read_write.c.org	2004-11-13 22:05:35.000000000 +0800
+++ new-2.6.9/fs/read_write.c	2004-11-13 22:05:36.000000000 +0800
@@ -313,8 +313,6 @@
 
 	return ret;
 }
-EXPORT_SYMBOL(sys_write);
-
 EXPORT_SYMBOL_GPL(sys_write);
 
 asmlinkage ssize_t sys_pread64(unsigned int fd, char __user *buf,
