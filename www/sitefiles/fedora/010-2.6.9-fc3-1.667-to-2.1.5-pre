diff -rux '*.orig' -x '*.org' -x '*.new' orig-2.6.9/arch/i386/mm/init.c new-2.6.9/arch/i386/mm/init.c
--- orig-2.6.9/arch/i386/mm/init.c	2004-11-12 04:06:15.000000000 +0800
+++ new-2.6.9/arch/i386/mm/init.c	2004-11-12 04:17:30.000000000 +0800
@@ -391,9 +391,28 @@
 	flush_tlb_all();
 }
 
+#if defined(CONFIG_PM_DISK) || defined(CONFIG_SOFTWARE_SUSPEND)
+/*
+ * Swap suspend & friends need this for resume because things like the intel-agp
+ * driver might have split up a kernel 4MB mapping.
+ */
+char __nosavedata swsusp_pg_dir[PAGE_SIZE]
+	__attribute__ ((aligned (PAGE_SIZE)));
+
+static inline void save_pg_dir(void)
+{
+	memcpy(swsusp_pg_dir, swapper_pg_dir, PAGE_SIZE);
+}
+#else
+static inline void save_pg_dir(void)
+{
+}
+#endif
+
 void zap_low_mappings(void)
 {
 	printk("zapping low mappings.\n");
+	save_pg_dir();
 	/*
 	 * Zap initial low-memory mappings.
 	 */
diff -rux '*.orig' -x '*.org' -x '*.new' orig-2.6.9/include/linux/sched.h new-2.6.9/include/linux/sched.h
--- orig-2.6.9/include/linux/sched.h	2004-11-12 04:06:14.000000000 +0800
+++ new-2.6.9/include/linux/sched.h	2004-11-12 04:17:30.000000000 +0800
@@ -636,8 +636,6 @@
 #define PF_SWAPOFF	0x00080000	/* I am in swapoff */
 #define PF_LESS_THROTTLE 0x00100000	/* Throttle me less: I clean memory */
 #define PF_SYNCWRITE	0x00200000	/* I am doing a sync write */
-#define PF_RELOCEXEC	0x00400000	/* relocate shared libraries */
-
 
 #ifdef CONFIG_SMP
 extern int set_cpus_allowed(task_t *p, cpumask_t new_mask);
diff -rux '*.orig' -x '*.org' -x '*.new' orig-2.6.9/kernel/sys.c new-2.6.9/kernel/sys.c
--- orig-2.6.9/kernel/sys.c	2004-11-12 04:06:15.000000000 +0800
+++ new-2.6.9/kernel/sys.c	2004-11-12 04:17:30.000000000 +0800
@@ -491,20 +491,6 @@
 		do_exit(0);
 		break;
 
-	case LINUX_REBOOT_CMD_RESTART2:
-		if (strncpy_from_user(&buffer[0], arg, sizeof(buffer) - 1) < 0) {
-			unlock_kernel();
-			return -EFAULT;
-		}
-		buffer[sizeof(buffer) - 1] = '\0';
-
-		notifier_call_chain(&reboot_notifier_list, SYS_RESTART, buffer);
-		system_state = SYSTEM_RESTART;
-		device_shutdown();
-		printk(KERN_EMERG "Restarting system with command '%s'.\n", buffer);
-		machine_restart(buffer);
-		break;
-
 #ifdef CONFIG_KEXEC
 	case LINUX_REBOOT_CMD_KEXEC:
 	{
@@ -523,6 +509,21 @@
 		break;
 	}
 #endif
+
+	case LINUX_REBOOT_CMD_RESTART2:
+		if (strncpy_from_user(&buffer[0], arg, sizeof(buffer) - 1) < 0) {
+			unlock_kernel();
+			return -EFAULT;
+		}
+		buffer[sizeof(buffer) - 1] = '\0';
+
+		notifier_call_chain(&reboot_notifier_list, SYS_RESTART, buffer);
+		system_state = SYSTEM_RESTART;
+		device_shutdown();
+		printk(KERN_EMERG "Restarting system with command '%s'.\n", buffer);
+		machine_restart(buffer);
+		break;
+
 #ifdef CONFIG_SOFTWARE_SUSPEND
 	case LINUX_REBOOT_CMD_SW_SUSPEND:
 		{
