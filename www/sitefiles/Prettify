#!/usr/bin/perl -w

%SUBSTS = ();

sub printline {
	my $line = shift;
	# Special handling for BASE... we don't want multiple slashes for
	# links to the home page.
	if (($line =~ m|###BASE###/|) && $SUBSTS{"BASE"}) {
		$line =~ s|###BASE###/|###BASE###|g;
	}

	foreach $key (keys %SUBSTS) {
		$val = $SUBSTS{$key};
		$line =~ s/###$key###/$val/g;
	}
	print $line;
}

sub dumpfile {
	my ($file,$dh) = @_;
	open(DUMPEE, $file)||die "Couldn't open $file";
	while (<DUMPEE>) { 
		if (defined $dh && /\Q<\/HEAD>\E/i) { printline $dh; }
		printline $_;
	}
	close DUMPEE;
}

sub get_latest_dev_patches {
	# Assume olddownloads-berl.html is up to date.
	return '';
}

# other magic words:
# if we're reading from a file, use the date on the file.
# if we're reading from stdin, use the current date.
$DATEFILE = "";
$DATEFILE = " -r ".$ARGV[0] if $#ARGV >= 0;
$ENV{"TZ"} = "AWST-8";
$SUBSTS{"WIKI_URL"} = "http://wiki.suspend2.net";
$SUBSTS{"BASE"} = "";
$SUBSTS{"DATE"} = `date -R$DATEFILE`;
chop $SUBSTS{"DATE"};
$SUBSTS{"LATEST_DEV_PATCHES"} = get_latest_dev_patches;

if ($#ARGV >= 0) {
	my $name = $ARGV[0];
	$name =~ s#[^/]##g;
	my $count = length($name);
	for (my $i = 0; $i < $count; $i++) {
		$SUBSTS{"BASE"} .= "../"
	}
}

$_=<>; # first line contains magic directives
chop $_;
foreach (split /\s*;\s*/) {
	my ($cmd, $val) = split /\s*=\s*/;
	$SUBSTS{$cmd} = $val;
}

# the LINUXDOC keyword means we take care merging the files
# (ie, the head is moved into the head, and body into the body)
$dochead = "";
if (exists $SUBSTS{"LINUXDOC"}) {
	# read in excess head
	while (<>) {
		last if s/\Q<\/HEAD>\E.*//i;
		$dochead .= $_;
	}
	while (<>) { last if /\Q<BODY>\E/i; }
}

# the RAW keyword makes up dump the file out without changes
# (except for stripping the top line)
if (exists $SUBSTS{"RAW"}) {
    while (<>) { print; }
    exit(0);
}


# process the relevant files

# the NOHEAD keyword prevents us from dumping the footer.
if (not exists $SUBSTS{"NOHEAD"}) {
	dumpfile "top.html", $dochead;
}

while (<>) { printline $_; }

# the NOFEET keyword prevents us from dumping the footer.
if (not exists $SUBSTS{"NOFEET"}) {
	dumpfile "bottom.html";
}
