--- linux-2.4.20/include/linux/sched.h.xfs.dist	2003-02-05 17:44:12.000000000 +0900
+++ linux-2.4.20/include/linux/sched.h	2003-02-05 17:46:06.000000000 +0900
@@ -436,6 +436,10 @@
 #define PF_FREE_PAGES	0x00002000	/* per process page freeing */
 #define PF_NOIO		0x00004000	/* avoid generating further I/O */
 #define PF_FSTRANS	0x00008000	/* inside a filesystem transaction */
+#define PF_FROZEN	0x00010000	/* frozen for system suspend */
+#define PF_FREEZE	0x00020000	/* trying to freeze this task for suspend */
+#define PF_IOTHREAD	0x00040000	/* this thread is needed for doing I/O to swap */
+#define PF_REFRIGERATE  0x00080000	/* this task should be frozen when a suspend occurs */
 
 #define PF_USEDFPU	0x00100000	/* task used FPU this quantum (SMP) */
 
--- linux-2.4.20/fs/xfs/pagebuf/page_buf.c.xfs.dist	2003-02-05 17:55:13.000000000 +0900
+++ linux-2.4.20/fs/xfs/pagebuf/page_buf.c	2003-02-14 01:45:09.000000000 +0900
@@ -56,6 +56,7 @@
 #include <linux/locks.h>
 #include <linux/sysctl.h>
 #include <linux/proc_fs.h>
+#include <linux/suspend.h>
 
 #include <support/debug.h>
 #include <support/kmem.h>
@@ -1988,6 +1989,7 @@
 
 	pb_daemons[cpu] = 1;
 
+	current->flags |= PF_REFRIGERATE; /* swsusp */
 	for (;;) {
 		add_wait_queue(&pagebuf_iodone_wait[cpu],
 				&wait);
@@ -2000,6 +2002,14 @@
 		run_task_queue(&pagebuf_iodone_tq[cpu]);
 		if (pb_daemons[cpu] == 0)
 			break;
+
+		/* swsusp */
+		if (current->flags & PF_FREEZE) {
+			printk("Now suspending %s\n", current->comm);
+			refrigerator(PF_IOTHREAD);
+			printk("Now resuming %s\n", current->comm);
+		}
+
 		__set_current_state(TASK_INTERRUPTIBLE);
 	}
 
@@ -2045,9 +2055,17 @@
 
 	strcpy(current->comm, "pagebufd");
 	current->flags |= PF_MEMALLOC;
+	current->flags |= PF_REFRIGERATE; /* swsusp */
 
 	INIT_LIST_HEAD(&tmp);
 	do {
+		/* swsusp */
+		if (current->flags & PF_FREEZE) {
+			printk("Now suspending %s\n", current->comm);
+			refrigerator(PF_IOTHREAD);
+			printk("Now resuming %s\n", current->comm);
+		}
+
 		if (pbd_active == 1) {
 			del_timer(&pb_daemon_timer);
 			pb_daemon_timer.expires = jiffies +
