# -*- sh -*-
# vim:ft=sh:ts=8:sw=4:noet

AddConfigHandler SuspendToRAMConfigEnabler
AddOptionHandler SuspendToRAMOptionHandler

AddConfigHelp "UseSuspendToRAM <boolean>" "Enable/disable the use of suspend-to-RAM.<"

AddLongOption "no-suspend-to-ram"
AddOptionHelp "--no-suspend-to-ram" "Disables suspend to RAM. This is useful for testing the suspend script itself."

SUSPEND_TO_RAM_FILE=/sys/power/state

SuspendToRAMConfigEnabler() {
    [ "$1" != "usesuspendtoram" ] && return 1
    BoolIsOn "$1" "$2" || return 0
    [ -n "$USING_SUSPENDTORAM" ] && return 0
    AddSuspendHook 10 EnsureSuspendToRAMCapable
    AddSuspendHook 99 DoSuspendToRAM
    USING_SUSPENDTORAM=1
    return 0
}

SuspendToRAMOptionHandler() {
    case $1 in
	--no-suspend-to-ram)
	    SWSUSP_TO_RAM_NO_SUSPEND=1
	    ;;
	*)
	    return 1
    esac
    return 0
}

DoSuspendToRAM() {
    local error
    if [ -z "$SUSPEND_TO_RAM_NO_SUSPEND" ] ; then
	vecho 1 "$EXE: Activating suspend ..."
	echo -n mem > $SUSPEND_TO_RAM_FILE
	PrintErrors $error
    else
	vecho 1 "$EXE: Not actually suspending (--no-suspend-to-ram given)"
    fi
    return 0
}

# EnsureSuspendToRAMCapable: makes sure we have /sys/power/state and that
# mem is one of the available suspend modes.
EnsureSuspendToRAMCapable() {
    if ! test -f $SUSPEND_TO_RAM_FILE; then
	cat <<EOF
Your kernel does not have power management built in.
EOF
	return 2
    fi
    if ! grep mem $SUSPEND_TO_RAM_FILE; then
	cat <<EOF
Your kernel or machine does not have suspend-to-RAM support.
EOF
	return 2
    fi

    return 0
}


