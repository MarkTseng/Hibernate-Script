AddConfigHandler MiscLaunchOptions
AddConfigHelp "OnSuspend NN <program to execute> [parameters for program]" "Executes a given program before suspending. NN is a number between 11 and 98, inclusive - a higher number means the program will be executed later in the suspend process."
AddConfigHelp "OnResume NN <program to execute> [parameters for program]" "Executes a given program after resuming. NN is a number between 11 and 98, inclusive - a higher number means the program will be executed earlier in the resume process."

MISC_LAUNCH_COUNT=0

MiscLaunchSuspendProg() {
    local tmpf
    MISC_LAUNCH_COUNT=$(($MISC_LAUNCH_COUNT+1))
    tmpf=`mktemp`
    AddSuspendHook $1 MiscLaunchAuxFunc$MISC_LAUNCH_COUNT
    shift
    cat <<EOT > $tmpf
MiscLaunchAuxFunc${MISC_LAUNCH_COUNT}() {
    vecho 1 "Executing $@..."
    $@ | \$LOGPIPE
}
EOT
    . $tmpf
    rm -f $tmpf
}

MiscLaunchResumeProg() {
    local tmpf
    MISC_LAUNCH_COUNT=$(($MISC_LAUNCH_COUNT+1))
    tmpf=`mktemp`
    AddResumeHook $1 MiscLaunchAuxFunc$MISC_LAUNCH_COUNT
    shift
    cat <<EOT > $tmpf
MiscLaunchAuxFunc${MISC_LAUNCH_COUNT}() {
    vecho 1 "Executing $@..."
    $@ | \$LOGPIPE
}
EOT
    . $tmpf
    rm -f $tmpf
}

CheckNum() {
    case "$1" in
	*[^0-9]*) return 1 ;;
	*) return 0
    esac
}

MiscLaunchOptions() {
    case $1 in
	onsuspend)
	    shift
	    if ! CheckNum $1 ; then
		vecho 0 "First argument to OnSuspend must be a number between 10 and 99!"
		exit 1
	    fi
	    MiscLaunchSuspendProg $*
	    ;;
	onresume)
	    shift
	    if ! CheckNum $1 ; then
		vecho 0 "First argument to OnResume must be a number between 10 and 99!"
		exit 1
	    fi
	    MiscLaunchResumeProg $*
	    ;;
	*)
	    return 1
    esac
    return 0
}

# $Id$
# vim:ft=sh:ts=8:sw=4:noet
