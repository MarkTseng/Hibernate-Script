# -*- sh -*-
# vim:ft=sh:ts=8:sw=4:noet

AddConfigHandler SplashOptions
AddConfigHelp "Bootsplash <boolean>" "Showing script progress on an bootsplash enabled kernel. You will almost certainly need to enable LeaveXBeforeSuspend as well, else your screen might end up garbled."
AddConfigHelp "BootsplashConfig <configfile>" "Bootsplash config file (default is /etc/bootsplash/default/config/bootsplash-1024x768.cfg)"


# default bootsplash theme config file
SPLASH_CONFIG_FILE="/etc/bootsplash/default/config/bootsplash-1024x768.cfg"

SplashProgress() 
{
    if [ x"$USE_BOOTSPLASH" = "x1" ] ; then
	CURRENT_PROGRESS=$((65535*${SPLASH_PROGRESS}/100));
	echo "show $CURRENT_PROGRESS" > /proc/splash
	SPLASH_PROGRESS=$(($SPLASH_PROGRESS+10));
    fi
    return 0
}

SplashCheckConfigFile() {
    local orig_args
    orig_args=$@

    local line
    local have_good
    local recommend_line1
    local recommend_line2

    have_good=0
    while read line ; do
	case $line in
	    box*) ;;
	    *) continue;
	esac
	set -- $line
	if [ "x$1" = "xbox" -a "x$2" = "xsilent" -a -n "$recommend_line1" -a -z "$recommend_line2" ] ; then
	    recommend_line2="$1"
	    shift 2
	    recommend_line2="$recommend_line2 $*"
	fi

	if [ "x$1" = "xbox" -a "x$2" = "xsilent" -a "x$3" = "xinter" ] ; then
	    recommend_line1="$1 $3"
	    shift 3
	    recommend_line1="$recommend_line1 $*"
	fi

	if [ "x$1" = "xbox" -a "$have_good" -eq 1 ] ; then
	    have_good=2
	    break
	fi

	if [ "x$1" = "xbox" -a "x$2" = "xinter" ] ; then
	    have_good=1
	fi
    done < $SPLASH_CONFIG_FILE
    set -- $orig_args

    [ "$have_good" -eq 2 ] && return 0

    if [ -n "$recommend_line1" -a -n "$recommend_line2" ] ; then
	vecho 1 "NOTE: Bootsplash progress bar might not work. I recommend adding the"
	vecho 1 "      following lines to the end of your bootsplash configuration"
	vecho 1 "      file ($SPLASH_CONFIG_FILE):"
	vecho 1 "--- snip ---"
	vecho 1 "$recommend_line1"
	vecho 1 "$recommend_line2"
	vecho 1 "--- snip ---"
	vecho 1
	return 1
    fi
    vecho 1 "Bootsplash config file isn't quite parsable by this script."
    vecho 1 "I can't tell whether or not it'll work."
    return 2
}

SplashStart() {
    [ x"$USE_BOOTSPLASH" != "x1" ] && return 0

    # check if /proc/splash and splash exists 
    if [ ! -f /proc/splash ]; then
	USE_BOOTSPLASH=0
	vecho 1 "/proc/splash not found. Bootsplash disabled."
	return 0
    fi
    if ! which splash > /dev/null 2>&1 ; then
	USE_BOOTSPLASH=0
	vecho 1 "'splash' utility not found. Bootsplash disabled."
	return 0
    fi

    # configfile exists ?
    if [ ! -f "$SPLASH_CONFIG_FILE" ]; then
	USE_BOOTSPLASH=0
	vecho 1 "config file not found. Bootsplash disabled."
	return 0
    fi

    # Check the config file will co-operate.
    SplashCheckConfigFile

    # go - these lines are magic. (-s and -n ?)
    splash -s -u 0 -n "$SPLASH_CONFIG_FILE"
    echo "silent" > /proc/splash 

    # increments the bar to 10 and kicks it all off.
    SPLASH_PROGRESS=0
    SplashProgress
    
    return 0
}

SplashResume() {
    SplashStart
    # XXX add text output
}

SplashSuspend() {
    SplashStart
    # XXX add text output
}

SplashStop() {
    if [ x"$USE_BOOTSPLASH" = "x1" ] ; then
	splash -s -u 0 -n
    fi
    return 0
}

SplashOptions() {
    case $1 in
	bootsplash)
	    BoolIsOn "$1" "$2" && USE_BOOTSPLASH=1 || return 0
	    # don't return. still stuff to do
	    ;;
	bootsplashconfig)
	    SPLASH_CONFIG_FILE="$2"
	    return 0
	    ;;
	*)
	    return 1
    esac

    if [ -z "$BOOTSPLASH_HOOKED" ] ; then
	# in call order
	AddSuspendHook 12 SplashSuspend
	AddSuspendHook 20 SplashProgress
	AddSuspendHook 30 SplashProgress
	AddSuspendHook 40 SplashProgress
	AddSuspendHook 50 SplashProgress
	AddSuspendHook 60 SplashProgress
	AddSuspendHook 70 SplashProgress
	AddSuspendHook 80 SplashProgress
	AddSuspendHook 90 SplashProgress
	AddSuspendHook 98 SplashProgress
	AddResumeHook 98 SplashResume
	AddResumeHook 90 SplashProgress
	AddResumeHook 80 SplashProgress
	AddResumeHook 70 SplashProgress
	AddResumeHook 60 SplashProgress
	AddResumeHook 50 SplashProgress
	AddResumeHook 40 SplashProgress
	AddResumeHook 30 SplashProgress
	AddResumeHook 20 SplashProgress
	AddResumeHook 12 SplashStop
	BOOTSPLASH_HOOKED=1
    fi

    return 0
}

# $Id$
